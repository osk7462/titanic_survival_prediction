{"ast":null,"code":"var _jsxFileName = \"/home/osama/titanic_survival_prediction/react/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Img from './component/img.js';\nimport Form from './component/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      // status: \"\",\n      // nanValue: \"\",\n      // nanValueAgeMean: \"\",\n      // describe: \"\",\n      // shape: \"\",\n      // cols: \"\",\n      // coldList: \"\",\n      // dtypes: \"\",\n      // colsWoPassenger: \"\",\n      // encoded: \"\",\n      // trainingScore: \"\",\n      // testingScore: \"\",\n      // figuresUrl: []\n      res: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      // status = data.status\n      // data = JSON.parse(data.data)\n      // let nanValue = data.nan_value\n      // let nanValueAgeMean = data.nan_alue_age_mean\n      // let describe = data.describe\n      // let shape = data.shape\n      // let cols = data.cols\n      // let coldList = data.cold_list\n      // let dtypes = data.dtypes\n      // let colsWoPassenger = data.cols_wo_passenger\n      // let encoded = data.encoded\n      // let trainingScore = data.training_score\n      // let testingScore = data.testing_score\n      // let figuresUrl = data.figures_url\n      this.setState({\n        res: data // status: status,\n        // nanValue: nanValue,\n        // nanValueAgeMean: nanValueAgeMean,\n        // describe: describe,\n        // shape: shape,\n        // cols: cols,\n        // coldList: coldList,\n        // dtypes: dtypes,\n        // colsWoPassenger: colsWoPassenger,\n        // encoded: encoded,\n        // trainingScore: trainingScore,\n        // testingScore: testingScore,\n        // figuresUrl: figuresUrl\n\n      });\n    });\n  }\n\n  render() {\n    let data = this.state.data;\n    console.log(JSON.parse(JSON.stringify)); // for (let key in this.state.response) {\n    //     let data = this.state.response[key]\n    //     console.log(JSON.parse(data))\n    // }\n    // let mediaurl = \"\"\n    // mediaurl += this.state.apiExploraoryData.figures\n    // mediaurl = mediaurl.split(',')\n    // const figures = mediaurl.map(url => {\n    //     return(\n    //     <Img url={url} />\n    //     )\n    // })\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Titanic Survival predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"fill the below form to predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exploratory Data Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/osama/titanic_survival_prediction/react/src/App.js"],"names":["React","Img","Form","App","Component","constructor","state","isLoading","res","componentDidMount","fetch","then","response","json","data","setState","render","console","log","JSON","parse","stringify"],"mappings":";AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACd;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,GAAG,EAAE;AAfI,KAAb;AAiBH;;AAGGC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,MAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AACVP,QAAAA,GAAG,EAAEM,IADK,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdU,OAAd;AAgBH,KAlCD;AAmCH;;AAGDE,EAAAA,MAAM,GAAG;AACL,QAAIF,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAhB,CAAZ,EAFK,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAeH;;AA5F6B;;AAgGlC,eAAelB,GAAf","sourcesContent":["import './App.css';\n\nimport React from 'react'\nimport Img from './component/img.js'\nimport Form from './component/form'\n\n\nclass App extends React.Component {\n    constructor() {\n    super()\n    this.state = {\n        isLoading: true,\n        // status: \"\",\n        // nanValue: \"\",\n        // nanValueAgeMean: \"\",\n        // describe: \"\",\n        // shape: \"\",\n        // cols: \"\",\n        // coldList: \"\",\n        // dtypes: \"\",\n        // colsWoPassenger: \"\",\n        // encoded: \"\",\n        // trainingScore: \"\",\n        // testingScore: \"\",\n        // figuresUrl: []\n        res: \"\"\n    };\n}\n\n\n    componentDidMount() {\n        fetch(\"/api\")\n        .then(response => response.json())\n        .then(data => {\n            // status = data.status\n            // data = JSON.parse(data.data)\n\n            // let nanValue = data.nan_value\n            // let nanValueAgeMean = data.nan_alue_age_mean\n            // let describe = data.describe\n            // let shape = data.shape\n            // let cols = data.cols\n            // let coldList = data.cold_list\n            // let dtypes = data.dtypes\n            // let colsWoPassenger = data.cols_wo_passenger\n            // let encoded = data.encoded\n            // let trainingScore = data.training_score\n            // let testingScore = data.testing_score\n            // let figuresUrl = data.figures_url\n            this.setState({\n                res: data\n                // status: status,\n                // nanValue: nanValue,\n                // nanValueAgeMean: nanValueAgeMean,\n                // describe: describe,\n                // shape: shape,\n                // cols: cols,\n                // coldList: coldList,\n                // dtypes: dtypes,\n                // colsWoPassenger: colsWoPassenger,\n                // encoded: encoded,\n                // trainingScore: trainingScore,\n                // testingScore: testingScore,\n                // figuresUrl: figuresUrl\n            })\n        })\n    }\n\n\n    render() {\n        let data = this.state.data\n        console.log(JSON.parse(JSON.stringify))\n        // for (let key in this.state.response) {\n        //     let data = this.state.response[key]\n        //     console.log(JSON.parse(data))\n        // }\n        // let mediaurl = \"\"\n        // mediaurl += this.state.apiExploraoryData.figures\n        // mediaurl = mediaurl.split(',')\n        // const figures = mediaurl.map(url => {\n        //     return(\n        //     <Img url={url} />\n        //     )\n        // })\n        return(\n\n            <div className=\"container\">\n              <h1>Titanic Survival predictor</h1>\n              <hr/>\n              <h4>fill the below form to predict</h4>\n              <Form />\n              <hr/>\n                <h2 >Exploratory Data Analysis</h2>\n                <div className=\"img-container\">\n                    {/* {figures} */}\n                </div>\n                <br/>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}