{"ast":null,"code":"var _jsxFileName = \"/home/osama/titanic_survival_prediction/react/src/component/form/form.js\";\nimport React from 'react';\nimport FormInput from './formInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PredictionForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      passengerId: 5,\n      pclass: 3,\n      sexMale: 1.0,\n      sexFemale: 0.0,\n      age: 35.0,\n      sibSp: 0,\n      parch: 0,\n      fare: 8.0500,\n      embarkedS: 1.0,\n      embarkedC: 0.0,\n      embarkedQ: 0.0,\n      staus: \"\",\n      predictedValue: \"\",\n      url: \"/api/predict?\"\n    };\n    this.predict = this.predict.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  predict() {\n    let url = this.state.url;\n    let i = 1;\n\n    for (let key in this.state) {\n      if (i < 12) {\n        url += \"v\" + i++ + \"=\" + this.state[key] + \"&\";\n      }\n    }\n\n    url.slice(0, -1);\n    console.log(\"from click: \" + url);\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        status: data.status,\n        predictedValue: data.predicted_value\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.predictedValue);\n    let gender;\n\n    try {\n      predicted = parseInt(predicted + \"\");\n      gender = parseInt(this.state.sexMale) ? \"He\" : \"She\";\n    } catch (err) {\n      console.log(err);\n    }\n\n    let i = 1;\n    let forms = [];\n\n    for (let key in this.state) {\n      if (i++ < 12) {\n        forms.push( /*#__PURE__*/_jsxDEV(FormInput, {\n          name: key,\n          handleChange: this.handleChange\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: forms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), !predicted ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Sorry \", gender, \" was not able to make it\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'green'\n        },\n        children: [gender, \" survived\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.predict,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PredictionForm;","map":{"version":3,"sources":["/home/osama/titanic_survival_prediction/react/src/component/form/form.js"],"names":["React","FormInput","PredictionForm","Component","constructor","state","passengerId","pclass","sexMale","sexFemale","age","sibSp","parch","fare","embarkedS","embarkedC","embarkedQ","staus","predictedValue","url","predict","bind","handleChange","event","console","log","target","name","setState","value","i","key","slice","fetch","then","response","json","data","status","predicted_value","render","gender","predicted","parseInt","err","forms","push","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormInput from './formInput';\n\nclass PredictionForm extends React.Component {\n    constructor() {\n    super()\n    this.state = {\n            passengerId:5,\n            pclass:3,\n            sexMale:1.0,\n            sexFemale:0.0,\n            age:35.0,\n            sibSp:0,\n            parch:0,\n            fare:8.0500,\n            embarkedS:1.0,\n            embarkedC:0.0,\n            embarkedQ: 0.0,\n            staus: \"\",\n            predictedValue: \"\",\n            url : \"/api/predict?\"\n    };\n    this.predict = this.predict.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    }\n    \n    handleChange(event) {\n        console.log(event.target.name)\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n\n    predict() {\n        let url = this.state.url\n        let i = 1\n        for(let key in this.state) {\n            if (i < 12){\n            url += \"v\"+ i++ + \"=\" + this.state[key] + \"&\"\n            }\n        }\n        url.slice(0,-1)\n        console.log(\"from click: \" + url)\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                status: data.status,\n                predictedValue: data.predicted_value\n            })\n        })\n\n    }\n\n\n    render() {\n\n        console.log(this.state.predictedValue)\n        let gender\n        try {\n            predicted = parseInt(predicted + \"\")\n            gender = parseInt(this.state.sexMale) ? \"He\" : \"She\"\n            }\n           catch(err) {\n            console.log(err)\n           }\n\n        let i = 1\n        let forms = []\n        for(let key in this.state) {\n            if (i++ < 12){\n                forms.push(<FormInput key={i} name={key} handleChange={this.handleChange}/>)\n            }\n        }\n        return(\n\n            <div className=\"form-container\">\n                <form>\n                    {forms}\n                </form>\n                {!predicted ? <h1 style={{color: 'red'}}>Sorry {gender} was not able to make it</h1>: <h1 style={{color: 'green'}}>{gender} survived</h1> }\n                <button onClick={this.predict}>Predict</button>\n            </div>\n        )\n    }\n\n}\n\nexport default PredictionForm;\n"]},"metadata":{},"sourceType":"module"}