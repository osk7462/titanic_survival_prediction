{"ast":null,"code":"var _jsxFileName = \"/home/osama/titanic_survival_prediction/react/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Img from './component/img.js';\nimport Form from './component/form/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      resStatus: \"\",\n      nanValue: \"\",\n      nanValueAgeMean: \"\",\n      describe: \"\",\n      shape: \"\",\n      cols: \"\",\n      coldList: \"\",\n      dtypes: \"\",\n      colsWoPassenger: \"\",\n      encoded: \"\",\n      trainingScore: \"\",\n      testingScore: \"\",\n      figuresUrl: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      let resStatus = data.status;\n      data = JSON.parse(data.data);\n      let nanValue = data.nan_value;\n      let nanValueAgeMean = data.nan_alue_age_mean;\n      let describe = data.describe;\n      let shape = data.shape;\n      let cols = data.cols;\n      let coldList = data.cold_list;\n      let dtypes = data.dtypes;\n      let colsWoPassenger = data.cols_wo_passenger;\n      let encoded = data.encoded;\n      let trainingScore = data.training_score;\n      let testingScore = data.testing_score;\n      let figuresUrl = data.figures_url;\n      this.setState({\n        resStatus: resStatus,\n        nanValue: nanValue,\n        nanValueAgeMean: nanValueAgeMean,\n        describe: describe,\n        shape: shape,\n        cols: cols,\n        coldList: coldList,\n        dtypes: dtypes,\n        colsWoPassenger: colsWoPassenger,\n        encoded: encoded,\n        trainingScore: trainingScore,\n        testingScore: testingScore,\n        figuresUrl: figuresUrl\n      });\n    });\n  }\n\n  render() {\n    const figures = this.state.figuresUrl.map(url => {\n      return /*#__PURE__*/_jsxDEV(Img, {\n        url: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Titanic Survival predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"fill the below form to predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exploratory Data Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: figures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/osama/titanic_survival_prediction/react/src/App.js"],"names":["React","Img","Form","App","Component","constructor","state","isLoading","resStatus","nanValue","nanValueAgeMean","describe","shape","cols","coldList","dtypes","colsWoPassenger","encoded","trainingScore","testingScore","figuresUrl","componentDidMount","fetch","then","response","json","data","status","JSON","parse","nan_value","nan_alue_age_mean","cold_list","cols_wo_passenger","training_score","testing_score","figures_url","setState","render","figures","map","url"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React from 'react'\nimport Img from './component/img.js'\nimport Form from './component/form/form'\n\n\nclass App extends React.Component {\n    constructor() {\n    super()\n    this.state = {\n        isLoading: true,\n        resStatus: \"\",\n        nanValue: \"\",\n        nanValueAgeMean: \"\",\n        describe: \"\",\n        shape: \"\",\n        cols: \"\",\n        coldList: \"\",\n        dtypes: \"\",\n        colsWoPassenger: \"\",\n        encoded: \"\",\n        trainingScore: \"\",\n        testingScore: \"\",\n        figuresUrl: []\n    };\n}\n\n\n    componentDidMount() {\n        fetch(\"/api\")\n        .then(response => response.json())\n        .then(data => {\n            let resStatus = data.status\n            data = JSON.parse(data.data)\n            let nanValue = data.nan_value\n            let nanValueAgeMean = data.nan_alue_age_mean\n            let describe = data.describe\n            let shape = data.shape\n            let cols = data.cols\n            let coldList = data.cold_list\n            let dtypes = data.dtypes\n            let colsWoPassenger = data.cols_wo_passenger\n            let encoded = data.encoded\n            let trainingScore = data.training_score\n            let testingScore = data.testing_score\n            let figuresUrl = data.figures_url\n            this.setState({\n                resStatus: resStatus,\n                nanValue: nanValue,\n                nanValueAgeMean: nanValueAgeMean,\n                describe: describe,\n                shape: shape,\n                cols: cols,\n                coldList: coldList,\n                dtypes: dtypes,\n                colsWoPassenger: colsWoPassenger,\n                encoded: encoded,\n                trainingScore: trainingScore,\n                testingScore: testingScore,\n                figuresUrl: figuresUrl\n            })\n        })\n    }\n\n\n    render() {\n        const figures = this.state.figuresUrl.map(url => {\n            return(\n            <Img url={url} />\n            )\n        })\n        return(\n\n            <div className=\"container\">\n              <h1>Titanic Survival predictor</h1>\n              <hr/>\n              <h4>fill the below form to predict</h4>\n              <Form />\n              <hr/>\n                <h2 >Exploratory Data Analysis</h2>\n                <div className=\"img-container\">\n                    {figures}\n                </div>\n                <br/>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}