{"ast":null,"code":"var _jsxFileName = \"/home/osama/titanic_survival_prediction/react/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Img from './component/img.js';\nimport Form from './component/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      status: \"\",\n      nanValue: \"\",\n      nanValueAgeMean: \"\",\n      describe: \"\",\n      shape: \"\",\n      cols: \"\",\n      coldList: \"\",\n      dtypes: \"\",\n      colsWoPassenger: \"\",\n      encoded: \"\",\n      training_score: \"\",\n      testing_score: \"\",\n      figures_url: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      status = data.status;\n      data = JSON.parse(data.data);\n      let nanValue = data.nan_value;\n      let nanValueAgeMean = data.nan_alue_age_mean;\n      let describe = data.describe;\n      let shape = data.shape;\n      let cols = data.cols;\n      let coldlist = data.cold_list;\n      let dtypes = da; // console.log(nanValue)\n      // let status = data.status\n      // console.log(status)\n      // console.log(data[\"nan_value\"])\n\n      this.setState({\n        status: status,\n        nanValue: nanValue\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.nanValue); // for (let key in this.state.response) {\n    //     let data = this.state.response[key]\n    //     console.log(JSON.parse(data))\n    // }\n    // let mediaurl = \"\"\n    // mediaurl += this.state.apiExploraoryData.figures\n    // mediaurl = mediaurl.split(',')\n    // const figures = mediaurl.map(url => {\n    //     return(\n    //     <Img url={url} />\n    //     )\n    // })\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Titanic Survival predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"fill the below form to predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exploratory Data Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/osama/titanic_survival_prediction/react/src/App.js"],"names":["React","Img","Form","App","Component","constructor","state","isLoading","status","nanValue","nanValueAgeMean","describe","shape","cols","coldList","dtypes","colsWoPassenger","encoded","training_score","testing_score","figures_url","componentDidMount","fetch","then","response","json","data","JSON","parse","nan_value","nan_alue_age_mean","coldlist","cold_list","da","setState","render","console","log"],"mappings":";AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACd;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,eAAe,EAAE,EAJR;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,QAAQ,EAAE,EARD;AASTC,MAAAA,MAAM,EAAE,EATC;AAUTC,MAAAA,eAAe,EAAE,EAVR;AAWTC,MAAAA,OAAO,EAAE,EAXA;AAYTC,MAAAA,cAAc,EAAE,EAZP;AAaTC,MAAAA,aAAa,EAAE,EAbN;AAcTC,MAAAA,WAAW,EAAE;AAdJ,KAAb;AAgBH;;AAGGC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,MAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVlB,MAAAA,MAAM,GAAGkB,IAAI,CAAClB,MAAd;AACAkB,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAP;AACA,UAAIjB,QAAQ,GAAGiB,IAAI,CAACG,SAApB;AACA,UAAInB,eAAe,GAAGgB,IAAI,CAACI,iBAA3B;AACA,UAAInB,QAAQ,GAAGe,IAAI,CAACf,QAApB;AACA,UAAIC,KAAK,GAAGc,IAAI,CAACd,KAAjB;AACA,UAAIC,IAAI,GAAGa,IAAI,CAACb,IAAhB;AACA,UAAIkB,QAAQ,GAAGL,IAAI,CAACM,SAApB;AACA,UAAIjB,MAAM,GAAGkB,EAAb,CATU,CAUV;AACA;AACA;AACA;;AACA,WAAKC,QAAL,CAAc;AACV1B,QAAAA,MAAM,EAAEA,MADE;AAEVC,QAAAA,QAAQ,EAAEA;AAFA,OAAd;AAKH,KArBD;AAsBH;;AAGD0B,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWG,QAAvB,EADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAeH;;AA7E6B;;AAiFlC,eAAeN,GAAf","sourcesContent":["import './App.css';\n\nimport React from 'react'\nimport Img from './component/img.js'\nimport Form from './component/form'\n\n\nclass App extends React.Component {\n    constructor() {\n    super()\n    this.state = {\n        isLoading: true,\n        status: \"\",\n        nanValue: \"\",\n        nanValueAgeMean: \"\",\n        describe: \"\",\n        shape: \"\",\n        cols: \"\",\n        coldList: \"\",\n        dtypes: \"\",\n        colsWoPassenger: \"\",\n        encoded: \"\",\n        training_score: \"\",\n        testing_score: \"\",\n        figures_url: []\n    };\n}\n\n\n    componentDidMount() {\n        fetch(\"/api\")\n        .then(response => response.json())\n        .then(data => {\n            status = data.status\n            data = JSON.parse(data.data)\n            let nanValue = data.nan_value\n            let nanValueAgeMean = data.nan_alue_age_mean\n            let describe = data.describe\n            let shape = data.shape\n            let cols = data.cols\n            let coldlist = data.cold_list\n            let dtypes = da\n            // console.log(nanValue)\n            // let status = data.status\n            // console.log(status)\n            // console.log(data[\"nan_value\"])\n            this.setState({\n                status: status,\n                nanValue: nanValue\n\n            })\n        })\n    }\n\n\n    render() {\n        console.log(this.state.nanValue)\n        // for (let key in this.state.response) {\n        //     let data = this.state.response[key]\n        //     console.log(JSON.parse(data))\n        // }\n        // let mediaurl = \"\"\n        // mediaurl += this.state.apiExploraoryData.figures\n        // mediaurl = mediaurl.split(',')\n        // const figures = mediaurl.map(url => {\n        //     return(\n        //     <Img url={url} />\n        //     )\n        // })\n        return(\n\n            <div className=\"container\">\n              <h1>Titanic Survival predictor</h1>\n              <hr/>\n              <h4>fill the below form to predict</h4>\n              <Form />\n              <hr/>\n                <h2 >Exploratory Data Analysis</h2>\n                <div className=\"img-container\">\n                    {/* {figures} */}\n                </div>\n                <br/>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}